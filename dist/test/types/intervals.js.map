{"version":3,"sources":["../../../src/types/intervals.js"],"names":["QUERY_INTERVAL","SECOND","MINUTE","HOUR","DAY","MONTH","AUTO","QUERY_INTERVAL_LIST","Object","keys","map","key","calculateAutoInterval","intervalMs","calculateAutoIntervalFromRange","from","to","dataPointIntervalMs"],"mappings":";;;;;;AAAO,IAAMA,cAAc,GAAG;AAC5BC,EAAAA,MAAM,EAAE,QADoB;AAE5BC,EAAAA,MAAM,EAAE,QAFoB;AAG5BC,EAAAA,IAAI,EAAE,MAHsB;AAI5BC,EAAAA,GAAG,EAAE,KAJuB;AAK5BC,EAAAA,KAAK,EAAE,OALqB;AAM5BC,EAAAA,IAAI,EAAE;AANsB,CAAvB;;AAQA,IAAMC,mBAAmB,GAAGC,MAAM,CAACC,IAAP,CAAYT,cAAZ,EAA4BU,GAA5B,CAAgC,UAAAC,GAAG;AAAA,SAAIX,cAAc,CAACW,GAAD,CAAlB;AAAA,CAAnC,CAA5B;;;AAEA,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACC,UAAD,EAAgB;AACnD,MAAIA,UAAU,IAAI,IAAlB,EAAwB;AACtB,WAAOb,cAAc,CAACC,MAAtB;AACD,GAFD,MAEO,IAAIY,UAAU,GAAG,KAAjB,EAAwB;AAC7B,WAAOb,cAAc,CAACE,MAAtB;AACD,GAFM,MAEA,IAAIW,UAAU,IAAI,KAAd,IAAuBA,UAAU,GAAG,MAAxC,EAAgD;AACrD,WAAOb,cAAc,CAACG,IAAtB;AACD,GAFM,MAEA,IAAIU,UAAU,IAAI,MAAd,IAAwBA,UAAU,GAAG,OAAzC,EAAkD;AACvD,WAAOb,cAAc,CAACI,GAAtB;AACD,GAFM,MAEA;AACL,WAAOJ,cAAc,CAACK,KAAtB;AACD;AACF,CAZM;;;;AAcA,IAAMS,8BAA8B,GAAG,SAAjCA,8BAAiC,CAACC,IAAD,EAAOC,EAAP,EAAc;AAC1D,MAAIC,mBAAmB,GAAG,CAACD,EAAE,GAAGD,IAAN,IAAY,GAAtC;;AACA,MAAIE,mBAAmB,IAAI,IAA3B,EAAiC;AAC/B,WAAOjB,cAAc,CAACC,MAAtB;AACD,GAFD,MAEO,IAAIgB,mBAAmB,GAAG,IAAtB,IAA8BA,mBAAmB,IAAI,KAAzD,EAAgE;AACrE,WAAOjB,cAAc,CAACE,MAAtB;AACD,GAFM,MAEA,IAAIe,mBAAmB,GAAG,KAAtB,IAA+BA,mBAAmB,IAAI,OAA1D,EAAmE;AACxE,WAAOjB,cAAc,CAACG,IAAtB;AACD,GAFM,MAEA,IAAIc,mBAAmB,GAAG,OAAtB,IAAiCA,mBAAmB,IAAI,QAA5D,EAAsE;AAC3E,WAAOjB,cAAc,CAACI,GAAtB;AACD,GAFM,MAEA;AACL,WAAOJ,cAAc,CAACK,KAAtB;AACD;AACF,CAbM","sourcesContent":["export const QUERY_INTERVAL = {\n  SECOND: 'SECOND',\n  MINUTE: 'MINUTE',\n  HOUR: 'HOUR',\n  DAY: 'DAY',\n  MONTH: 'MONTH',\n  AUTO: 'AUTO'\n};\nexport const QUERY_INTERVAL_LIST = Object.keys(QUERY_INTERVAL).map(key => QUERY_INTERVAL[key]);\n\nexport const calculateAutoInterval = (intervalMs) => {\n  if (intervalMs <= 1000) {\n    return QUERY_INTERVAL.SECOND;\n  } else if (intervalMs < 60000) {\n    return QUERY_INTERVAL.MINUTE;\n  } else if (intervalMs >= 60000 && intervalMs < 604800) {\n    return QUERY_INTERVAL.HOUR;\n  } else if (intervalMs >= 604800 && intervalMs < 2592000) {\n    return QUERY_INTERVAL.DAY;\n  } else {\n    return QUERY_INTERVAL.MONTH;\n  }\n}\n\nexport const calculateAutoIntervalFromRange = (from, to) => {\n  let dataPointIntervalMs = (to - from)/200;\n  if (dataPointIntervalMs <= 1000) {\n    return QUERY_INTERVAL.SECOND;\n  } else if (dataPointIntervalMs > 1000 && dataPointIntervalMs <= 60000) {\n    return QUERY_INTERVAL.MINUTE;\n  } else if (dataPointIntervalMs > 60000 && dataPointIntervalMs <= 3600000) {\n    return QUERY_INTERVAL.HOUR;\n  } else if (dataPointIntervalMs > 3600000 && dataPointIntervalMs <= 86400000) {\n    return QUERY_INTERVAL.DAY;\n  } else {\n    return QUERY_INTERVAL.MONTH;\n  }\n}\n"],"file":"intervals.js"}