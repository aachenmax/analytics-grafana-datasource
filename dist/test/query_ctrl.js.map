{"version":3,"sources":["../../src/query_ctrl.js"],"names":["REMOVE_FILTER_TEXT","DEFAULT_OPERATOR","BitmovinAnalyticsDatasourceQueryCtrl","$scope","$injector","templateSrv","$q","uiSegmentSrv","scope","metrics","AGGREGATION_LIST","fields","ATTRIBUTE_LIST","operators","OPERATOR_LIST","licenses","resultFormats","intervals","QUERY_INTERVAL_LIST","filterSegment","newPlusButton","groupBySegment","groupByParts","filterSegments","target","filter","map","createFilterSegment","f","metric","percentileValue","dimension","license","resultFormat","interval","QUERY_INTERVAL","HOUR","alias","groupBy","datasource","getLicenses","then","response","status","data","result","items","item","name","licenseKey","push","find","l","panelCtrl","refresh","options","_","field","value","text","Promise","resolve","unshift","op","segment","$index","params","def","type","optional","plusButton","html","operator","filterValue","newFilter","createFilter","selectParts","part","evt","splice","when","QueryCtrl","templateUrl"],"mappings":"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","file":"query_ctrl.js","sourcesContent":["import {QueryCtrl} from 'app/plugins/sdk';\nimport './css/query-editor.css!'\n\nimport _ from 'lodash';\nimport { ATTRIBUTE_LIST, convertFilterValueToProperType } from './types/queryAttributes';\nimport { OPERATOR_LIST } from './types/operators';\nimport { QUERY_INTERVAL, QUERY_INTERVAL_LIST } from './types/intervals';\nimport { AGGREGATION_LIST } from './types/aggregations';\n\nconst REMOVE_FILTER_TEXT = '-- Remove Filter --';\nconst DEFAULT_OPERATOR = 'EQ';\n\nexport class BitmovinAnalyticsDatasourceQueryCtrl extends QueryCtrl {\n\n  constructor($scope, $injector, templateSrv, $q, uiSegmentSrv)  {\n    super($scope, $injector);\n\n    this.scope = $scope;\n    this.$q = $q;\n    this.uiSegmentSrv = uiSegmentSrv;\n\n    this.metrics = AGGREGATION_LIST;\n    this.fields = ATTRIBUTE_LIST;\n    this.operators = OPERATOR_LIST;\n    this.licenses = [];\n    this.resultFormats = ['time_series', 'table'];\n    this.intervals = QUERY_INTERVAL_LIST;\n    this.filterSegment = this.uiSegmentSrv.newPlusButton();\n    this.groupBySegment = this.uiSegmentSrv.newPlusButton();\n    this.groupByParts = [];\n    this.filterSegments = this.target.filter ? this.target.filter.map(f => this.createFilterSegment(f)) : [];\n\n    this.target.metric = this.target.metric || this.metrics[0];\n    this.target.percentileValue = this.target.percentileValue || 95;\n    this.target.dimension = this.target.dimension || this.fields[0];\n    this.target.license = this.target.license || this.licenses[0];\n    this.target.resultFormat = this.target.resultFormat || this.resultFormats[0];\n    this.target.interval = this.target.interval || QUERY_INTERVAL.HOUR;\n    this.target.alias = this.target.alias || '';\n    this.target.groupBy = this.target.groupBy || [];\n    this.target.filter = this.target.filter || [];\n\n    this.datasource.getLicenses().then(response => {\n      if (response.status === 200) {\n        this.licenses = [];\n\n        for (var item of response.data.data.result.items) {\n          item['label'] = item.name + ' (' + item.licenseKey + ')';\n          this.licenses.push(item);\n        }\n\n        if (!this.target.license || !this.licenses.find(l => l.licenseKey === this.target.license)) {\n          this.target.license = this.licenses[0].licenseKey;\n        }\n      }\n    });\n  }\n\n  onChangeInternal() {\n    this.panelCtrl.refresh(); // Asks the panel to refresh data.\n  }\n\n  getGroupByOptions() {\n    let options = _.map(this.fields, function(field) {\n      return { value: field, text: field };\n    });\n\n    return Promise.resolve(options);\n  }\n\n  getFilterOptions() {\n    let options = _.map(this.fields, function(field) {\n      return { value: field, text: field };\n    });\n\n    return Promise.resolve(options);\n  }\n\n  getFilterSegmentOptions() {\n    var options = _.map(this.fields, function(field) {\n      return { value: field, text: field };\n    });\n\n    options.unshift({\n      value: REMOVE_FILTER_TEXT,\n      text: REMOVE_FILTER_TEXT\n    })\n\n    return Promise.resolve(options);\n  }\n\n  getFilterOperatorOptions() {\n    let options = _.map(this.operators, function(op) {\n      return { value: op, text: op };\n    });\n\n    return Promise.resolve(options);\n  }\n\n  getFilterValueOptions(segment, $index) {\n    return Promise.resolve([]);\n  }\n\n  groupByAction() {\n    this.target.groupBy.push(this.groupBySegment.value);\n\n    this.groupByParts.push({\n      params: [this.groupBySegment.value],\n      def: {\n        type: 'dimension',\n        params: [{\n          optional: false\n        }]\n      }\n    });\n\n    const plusButton = this.uiSegmentSrv.newPlusButton();\n    this.groupBySegment.value = plusButton.value;\n    this.groupBySegment.html = plusButton.html;\n    this.panelCtrl.refresh();\n  }\n\n  createFilter(name, operator, value=null) {\n    const filter = {name, operator: operator || DEFAULT_OPERATOR, value};\n    filter.value = convertFilterValueToProperType(filter)\n    return filter;\n  }\n\n  createFilterSegment(filter) {\n    return {html: filter.name, operator: {html: filter.operator || DEFAULT_OPERATOR}, filterValue: {html: filter.value || 'set filter value'}};\n  }\n\n  filterAction() {\n    const filter = this.target.filter.find(f => f.name === this.filterSegment.name);\n    if (!filter) {\n      const newFilter = this.createFilter(this.filterSegment.value)\n      this.target.filter.push(newFilter);\n\n      this.filterSegments.push(this.createFilterSegment(newFilter));\n    }\n\n    const plusButton = this.uiSegmentSrv.newPlusButton();\n    this.filterSegment.value = plusButton.value;\n    this.filterSegment.html = plusButton.html;\n    this.panelCtrl.refresh();\n  }\n\n  handleGroupByPartEvent(selectParts, part, evt) {\n    switch (evt.name) {\n      case 'action': {\n        this.target.groupBy.splice(part, 1);\n        this.groupByParts.splice(part, 1);\n        this.panelCtrl.refresh();\n        break;\n      }\n      case 'get-part-actions': {\n        return this.$q.when([{ text: 'Remove', value: 'remove-part' }]);\n      }\n    }\n  }\n\n  filterSegmentUpdate(segment, $index) {\n    if (segment.value === REMOVE_FILTER_TEXT) {\n      this.target.filter.splice($index, 1);\n      this.filterSegments.splice($index, 1);\n    } else {\n      this.target.filter[$index].name = segment.value;\n    }\n\n    this.panelCtrl.refresh();\n  }\n\n  filterOperatorSegmentUpdate(segment, $index) {\n    this.target.filter[$index].operator = segment.operator.value;\n    this.panelCtrl.refresh();\n  }\n\n  filterValueSegmentUpdate(segment, $index) {\n    this.target.filter[$index].value = segment.filterValue.value;\n    this.panelCtrl.refresh();\n  }\n}\n\nBitmovinAnalyticsDatasourceQueryCtrl.templateUrl = 'partials/query.editor.html';\n\n"]}