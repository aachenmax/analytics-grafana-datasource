{"version":3,"sources":["../../src/query_ctrl.js"],"names":["REMOVE_FILTER_TEXT","DEFAULT_LICENSE","licenseKey","label","DEFAULT_OPERATOR","OPERATOR","EQ","BitmovinAnalyticsDatasourceQueryCtrl","$scope","$injector","templateSrv","$q","uiSegmentSrv","scope","metrics","AGGREGATION_LIST","fields","ATTRIBUTE_LIST","operators","OPERATOR_LIST","licenses","resultFormats","ResultFormat","TIME_SERIES","TABLE","intervals","QUERY_INTERVAL_LIST","filterSegment","newPlusButton","groupBySegment","groupByParts","target","groupBy","map","createGroupByPartsEntry","e","filterSegments","filter","createFilterSegment","f","metric","percentileValue","dimension","license","resultFormat","interval","QUERY_INTERVAL","HOUR","alias","limit","datasource","getLicenses","then","response","status","data","result","items","item","name","push","find","l","panelCtrl","refresh","options","_","field","value","text","Promise","resolve","unshift","op","segment","$index","groupByValue","params","def","type","optional","plusButton","html","operator","filterValue","newFilter","createFilter","selectParts","part","evt","splice","when","QueryCtrl","templateUrl"],"mappings":"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","file":"query_ctrl.js","sourcesContent":["import {QueryCtrl} from 'app/plugins/sdk';\nimport './css/query-editor.css!'\n\nimport _ from 'lodash';\nimport { ATTRIBUTE_LIST, convertFilterValueToProperType } from './types/queryAttributes';\nimport { OPERATOR_LIST, OPERATOR } from './types/operators';\nimport { QUERY_INTERVAL, QUERY_INTERVAL_LIST } from './types/intervals';\nimport { AGGREGATION_LIST } from './types/aggregations';\nimport { ResultFormat } from './types/resultFormat';\n\nconst REMOVE_FILTER_TEXT = '-- Remove Filter --';\nconst DEFAULT_LICENSE = {licenseKey: '<YOUR LICENSE KEY>', label: '-- Select License --'};\nconst DEFAULT_OPERATOR = OPERATOR.EQ;\n\nexport class BitmovinAnalyticsDatasourceQueryCtrl extends QueryCtrl {\n\n  constructor($scope, $injector, templateSrv, $q, uiSegmentSrv)  {\n    super($scope, $injector);\n\n    this.scope = $scope;\n    this.$q = $q;\n    this.uiSegmentSrv = uiSegmentSrv;\n\n    this.metrics = AGGREGATION_LIST;\n    this.fields = ATTRIBUTE_LIST;\n    this.operators = OPERATOR_LIST;\n    this.licenses = [];\n    this.resultFormats = [ResultFormat.TIME_SERIES, ResultFormat.TABLE];\n    this.intervals = QUERY_INTERVAL_LIST;\n    this.filterSegment = this.uiSegmentSrv.newPlusButton();\n    this.groupBySegment = this.uiSegmentSrv.newPlusButton();\n    this.groupByParts = this.target.groupBy ? this.target.groupBy.map(e => this.createGroupByPartsEntry(e)) : [];\n    this.filterSegments = this.target.filter ? this.target.filter.map(f => this.createFilterSegment(f)) : [];\n\n    this.target.metric = this.target.metric || this.metrics[0];\n    this.target.percentileValue = this.target.percentileValue || 95;\n    this.target.dimension = this.target.dimension || this.fields[0];\n    this.target.license = this.target.license || this.licenses[0];\n    this.target.resultFormat = this.target.resultFormat || this.resultFormats[0];\n    this.target.interval = this.target.interval || QUERY_INTERVAL.HOUR;\n    this.target.alias = this.target.alias || '';\n    this.target.groupBy = this.target.groupBy || [];\n    this.target.filter = this.target.filter || [];\n    this.target.limit = this.target.limit;\n\n    this.datasource.getLicenses().then(response => {\n      if (response.status === 200) {\n        this.licenses = [DEFAULT_LICENSE];\n\n        for (var item of response.data.data.result.items) {\n          item['label'] = item.name ? item.name : item.licenseKey;\n          this.licenses.push(item);\n        }\n\n        if (!this.target.license || !this.licenses.find(l => l.licenseKey === this.target.license)) {\n          this.target.license = DEFAULT_LICENSE.licenseKey;\n        }\n      }\n    });\n  }\n\n  onChangeInternal() {\n    this.panelCtrl.refresh(); // Asks the panel to refresh data.\n  }\n\n  getGroupByOptions() {\n    let options = _.map(this.fields, function(field) {\n      return { value: field, text: field };\n    });\n\n    return Promise.resolve(options);\n  }\n\n  getFilterOptions() {\n    let options = _.map(this.fields, function(field) {\n      return { value: field, text: field };\n    });\n\n    return Promise.resolve(options);\n  }\n\n  getFilterSegmentOptions() {\n    var options = _.map(this.fields, function(field) {\n      return { value: field, text: field };\n    });\n\n    options.unshift({\n      value: REMOVE_FILTER_TEXT,\n      text: REMOVE_FILTER_TEXT\n    })\n\n    return Promise.resolve(options);\n  }\n\n  getFilterOperatorOptions() {\n    let options = _.map(this.operators, function(op) {\n      return { value: op, text: op };\n    });\n\n    return Promise.resolve(options);\n  }\n\n  getFilterValueOptions(segment, $index) {\n    return Promise.resolve([]);\n  }\n\n  createGroupByPartsEntry(groupByValue) {\n    return {\n      params: [groupByValue],\n      def: {\n        type: 'dimension',\n        params: [{\n          optional: false\n        }]\n      }\n    }\n  }\n\n  groupByAction() {\n    this.target.groupBy.push(this.groupBySegment.value);\n\n    this.groupByParts.push(this.createGroupByPartsEntry(this.groupBySegment.value));\n\n    const plusButton = this.uiSegmentSrv.newPlusButton();\n    this.groupBySegment.value = plusButton.value;\n    this.groupBySegment.html = plusButton.html;\n    this.panelCtrl.refresh();\n  }\n\n  createFilter(name, operator, value=null) {\n    const filter = {name, operator: operator || DEFAULT_OPERATOR, value};\n    filter.value = convertFilterValueToProperType(filter)\n    return filter;\n  }\n\n  createFilterSegment(filter) {\n    return {html: filter.name, operator: {html: filter.operator || DEFAULT_OPERATOR}, filterValue: {html: filter.value || 'set filter value'}};\n  }\n\n  filterAction() {\n    const filter = this.target.filter.find(f => f.name === this.filterSegment.name);\n    if (!filter) {\n      const newFilter = this.createFilter(this.filterSegment.value)\n      this.target.filter.push(newFilter);\n\n      this.filterSegments.push(this.createFilterSegment(newFilter));\n    }\n\n    const plusButton = this.uiSegmentSrv.newPlusButton();\n    this.filterSegment.value = plusButton.value;\n    this.filterSegment.html = plusButton.html;\n    this.panelCtrl.refresh();\n  }\n\n  handleGroupByPartEvent(selectParts, part, evt) {\n    switch (evt.name) {\n      case 'action': {\n        this.target.groupBy.splice(part, 1);\n        this.groupByParts.splice(part, 1);\n        this.panelCtrl.refresh();\n        break;\n      }\n      case 'get-part-actions': {\n        return this.$q.when([{ text: 'Remove', value: 'remove-part' }]);\n      }\n    }\n  }\n\n  filterSegmentUpdate(segment, $index) {\n    if (segment.value === REMOVE_FILTER_TEXT) {\n      this.target.filter.splice($index, 1);\n      this.filterSegments.splice($index, 1);\n    } else {\n      this.target.filter[$index].name = segment.value;\n    }\n\n    this.panelCtrl.refresh();\n  }\n\n  filterOperatorSegmentUpdate(segment, $index) {\n    this.target.filter[$index].operator = segment.operator.value;\n    this.panelCtrl.refresh();\n  }\n\n  filterValueSegmentUpdate(segment, $index) {\n    this.target.filter[$index].value = segment.filterValue.value;\n    this.panelCtrl.refresh();\n  }\n}\n\nBitmovinAnalyticsDatasourceQueryCtrl.templateUrl = 'partials/query.editor.html';\n\n"]}