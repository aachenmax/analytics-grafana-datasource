{"version":3,"sources":["../src/result_transformer.js"],"names":["ResultFormat","transformDataToTable","analyticsResult","options","datapoints","_","map","rows","row","target","resultTarget","transformDataToTimeSeries","groupBys","data","groupBy","results","length","groupings","metricLabel","push","Object","keys","key","series","orderBy","result","transform","response","config","resultFormat","TABLE","TIME_SERIES"],"mappings":";;;;;;;;AAAQA,MAAAA,Y,sBAAAA,Y;;;AAEFC,MAAAA,oB,GAAuB,SAAvBA,oBAAuB,CAACC,eAAD,EAAkBC,OAAlB,EAA8B;AACzD,YAAIC,UAAU,GAAGC,CAAC,CAACC,GAAF,CAAMJ,eAAe,CAACK,IAAtB,EAA4B,UAAAC,GAAG,EAAI;AAClD,iBAAO,CAACA,GAAG,CAAC,CAAD,CAAJ,EAASA,GAAG,CAAC,CAAD,CAAZ,CAAP,CADkD,CACzB;AAC1B,SAFgB,CAAjB;;AAIA,eAAO;AACLC,UAAAA,MAAM,EAAEN,OAAO,CAACO,YADX;AAELN,UAAAA,UAAU,EAAEA;AAFP,SAAP;AAID,O;;AAEKO,MAAAA,yB,GAA4B,SAA5BA,yBAA4B,CAACT,eAAD,EAAkBC,OAAlB,EAA8B;AAC9D,YAAMS,QAAQ,GAAGT,OAAO,CAACU,IAAR,CAAaC,OAA9B;AACA,YAAMC,OAAO,GAAG,EAAhB;;AACA,YAAIH,QAAQ,CAACI,MAAT,GAAkB,CAAtB,EAAyB;AACvB,cAAIC,SAAS,GAAG,EAAhB;;AACAZ,UAAAA,CAAC,CAACC,GAAF,CAAMJ,eAAe,CAACK,IAAtB,EAA4B,UAAAC,GAAG,EAAI;AACjC,gBAAMU,WAAW,GAAGV,GAAG,CAAC,CAAD,CAAvB;;AACA,gBAAI,CAACS,SAAS,CAACC,WAAD,CAAd,EAA6B;AAC3BD,cAAAA,SAAS,CAACC,WAAD,CAAT,GAAyB,EAAzB;AACD;;AACDD,YAAAA,SAAS,CAACC,WAAD,CAAT,CAAuBC,IAAvB,CAA4B,CAACX,GAAG,CAAC,CAAD,CAAJ,EAASA,GAAG,CAAC,CAAD,CAAZ,CAA5B,EALiC,CAKc;AAChD,WAND;;AAOAY,UAAAA,MAAM,CAACC,IAAP,CAAYJ,SAAZ,EAAuBX,GAAvB,CAA2B,UAAAgB,GAAG,EAAI;AAChC,gBAAMlB,UAAU,GAAGa,SAAS,CAACK,GAAD,CAA5B;AACA,gBAAMC,MAAM,GAAG;AACbd,cAAAA,MAAM,EAAEa,GADK;AAEblB,cAAAA,UAAU,EAAEC,CAAC,CAACmB,OAAF,CAAUpB,UAAV,EAAsB,CAAC,CAAD,CAAtB,EAA2B,KAA3B;AAFC,aAAf;AAIAW,YAAAA,OAAO,CAACI,IAAR,CAAaI,MAAb;AACD,WAPD;AAQD,SAjBD,MAiBO;AACL,cAAIE,MAAM,GAAIxB,oBAAoB,CAACC,eAAD,EAAkBC,OAAlB,CAAlC;AACAsB,UAAAA,MAAM,CAACrB,UAAP,GAAoBC,CAAC,CAACmB,OAAF,CAAUC,MAAM,CAACrB,UAAjB,EAA6B,CAAC,CAAD,CAA7B,EAAkC,KAAlC,CAApB;AACAW,UAAAA,OAAO,CAACI,IAAR,CAAaM,MAAb;AACD;;AACD,eAAOV,OAAP;AACD,O;;2BAEYW,S,GAAY,SAAZA,SAAY,CAACC,QAAD,EAAWxB,OAAX,EAAuB;AAC9C,YAAMD,eAAe,GAAGyB,QAAQ,CAACd,IAAT,CAAcA,IAAd,CAAmBY,MAA3C;AACA,YAAMG,MAAM,GAAGD,QAAQ,CAACC,MAAxB;;AACA,YAAIA,MAAM,CAACC,YAAP,KAAwB7B,YAAY,CAAC8B,KAAzC,EAAgD;AAC9C,iBAAO,CAAC7B,oBAAoB,CAACC,eAAD,EAAkB0B,MAAlB,CAArB,CAAP;AACD,SAFD,MAEO,IAAIA,MAAM,CAACC,YAAP,KAAwB7B,YAAY,CAAC+B,WAAzC,EAAsD;AAC3D,iBAAOpB,yBAAyB,CAACT,eAAD,EAAkB0B,MAAlB,CAAhC;AACD;AACF,O","sourcesContent":["import {ResultFormat} from './types/resultFormat';\n\nconst transformDataToTable = (analyticsResult, options) => {\n  let datapoints = _.map(analyticsResult.rows, row => {\n    return [row[1], row[0]]; // value, timestamp\n  });\n\n  return {\n    target: options.resultTarget,\n    datapoints: datapoints\n  }\n}\n\nconst transformDataToTimeSeries = (analyticsResult, options) => {\n  const groupBys = options.data.groupBy;\n  const results = [];\n  if (groupBys.length > 0) {\n    let groupings = {};\n    _.map(analyticsResult.rows, row => {\n      const metricLabel = row[1];\n      if (!groupings[metricLabel]) {\n        groupings[metricLabel] = [];\n      }\n      groupings[metricLabel].push([row[2], row[0]]); // value, timestamp\n    });\n    Object.keys(groupings).map(key => {\n      const datapoints = groupings[key];\n      const series = {\n        target: key,\n        datapoints: _.orderBy(datapoints, [1], 'asc')\n      }\n      results.push(series);\n    });\n  } else {\n    let result =  transformDataToTable(analyticsResult, options);\n    result.datapoints = _.orderBy(result.datapoints, [1], 'asc');\n    results.push(result);\n  }\n  return results;\n}\n\nexport const transform = (response, options) => {\n  const analyticsResult = response.data.data.result;\n  const config = response.config;\n  if (config.resultFormat === ResultFormat.TABLE) {\n    return [transformDataToTable(analyticsResult, config)];\n  } else if (config.resultFormat === ResultFormat.TIME_SERIES) {\n    return transformDataToTimeSeries(analyticsResult, config);\n  }\n}\n"],"file":"result_transformer.js"}