{"version":3,"sources":["../src/query_ctrl.js"],"names":["QueryCtrl","_","ATTRIBUTE_LIST","convertFilterValueToProperType","OPERATOR_LIST","OPERATOR","QUERY_INTERVAL","QUERY_INTERVAL_LIST","AGGREGATION_LIST","ResultFormat","REMOVE_FILTER_TEXT","DEFAULT_OPERATOR","EQ","BitmovinAnalyticsDatasourceQueryCtrl","$scope","$injector","templateSrv","$q","uiSegmentSrv","scope","metrics","fields","operators","licenses","resultFormats","TIME_SERIES","TABLE","intervals","filterSegment","newPlusButton","groupBySegment","groupByParts","target","groupBy","map","createGroupByPartsEntry","e","filterSegments","filter","createFilterSegment","f","metric","percentileValue","dimension","license","resultFormat","interval","HOUR","alias","limit","datasource","getLicenses","then","response","status","data","result","items","item","name","licenseKey","push","find","l","panelCtrl","refresh","options","field","value","text","Promise","resolve","unshift","op","segment","$index","groupByValue","params","def","type","optional","plusButton","html","operator","filterValue","newFilter","createFilter","selectParts","part","evt","splice","when","templateUrl"],"mappings":"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","file":"query_ctrl.js","sourcesContent":["import {QueryCtrl} from 'app/plugins/sdk';\nimport './css/query-editor.css!'\n\nimport _ from 'lodash';\nimport { ATTRIBUTE_LIST, convertFilterValueToProperType } from './types/queryAttributes';\nimport { OPERATOR_LIST, OPERATOR } from './types/operators';\nimport { QUERY_INTERVAL, QUERY_INTERVAL_LIST } from './types/intervals';\nimport { AGGREGATION_LIST } from './types/aggregations';\nimport { ResultFormat } from './types/resultFormat';\n\nconst REMOVE_FILTER_TEXT = '-- Remove Filter --';\nconst DEFAULT_OPERATOR = OPERATOR.EQ;\n\nexport class BitmovinAnalyticsDatasourceQueryCtrl extends QueryCtrl {\n\n  constructor($scope, $injector, templateSrv, $q, uiSegmentSrv)  {\n    super($scope, $injector);\n\n    this.scope = $scope;\n    this.$q = $q;\n    this.uiSegmentSrv = uiSegmentSrv;\n\n    this.metrics = AGGREGATION_LIST;\n    this.fields = ATTRIBUTE_LIST;\n    this.operators = OPERATOR_LIST;\n    this.licenses = [];\n    this.resultFormats = [ResultFormat.TIME_SERIES, ResultFormat.TABLE];\n    this.intervals = QUERY_INTERVAL_LIST;\n    this.filterSegment = this.uiSegmentSrv.newPlusButton();\n    this.groupBySegment = this.uiSegmentSrv.newPlusButton();\n    this.groupByParts = this.target.groupBy ? this.target.groupBy.map(e => this.createGroupByPartsEntry(e)) : [];\n    this.filterSegments = this.target.filter ? this.target.filter.map(f => this.createFilterSegment(f)) : [];\n\n    this.target.metric = this.target.metric || this.metrics[0];\n    this.target.percentileValue = this.target.percentileValue || 95;\n    this.target.dimension = this.target.dimension || this.fields[0];\n    this.target.license = this.target.license || this.licenses[0];\n    this.target.resultFormat = this.target.resultFormat || this.resultFormats[0];\n    this.target.interval = this.target.interval || QUERY_INTERVAL.HOUR;\n    this.target.alias = this.target.alias || '';\n    this.target.groupBy = this.target.groupBy || [];\n    this.target.filter = this.target.filter || [];\n    this.target.limit = this.target.limit;\n\n    this.datasource.getLicenses().then(response => {\n      if (response.status === 200) {\n        this.licenses = [];\n\n        for (var item of response.data.data.result.items) {\n          item['label'] = item.name ? item.name : item.licenseKey;\n          this.licenses.push(item);\n        }\n\n        if (!this.target.license || !this.licenses.find(l => l.licenseKey === this.target.license)) {\n          this.target.license = this.licenses[0].licenseKey;\n        }\n      }\n    });\n  }\n\n  onChangeInternal() {\n    this.panelCtrl.refresh(); // Asks the panel to refresh data.\n  }\n\n  getGroupByOptions() {\n    let options = _.map(this.fields, function(field) {\n      return { value: field, text: field };\n    });\n\n    return Promise.resolve(options);\n  }\n\n  getFilterOptions() {\n    let options = _.map(this.fields, function(field) {\n      return { value: field, text: field };\n    });\n\n    return Promise.resolve(options);\n  }\n\n  getFilterSegmentOptions() {\n    var options = _.map(this.fields, function(field) {\n      return { value: field, text: field };\n    });\n\n    options.unshift({\n      value: REMOVE_FILTER_TEXT,\n      text: REMOVE_FILTER_TEXT\n    })\n\n    return Promise.resolve(options);\n  }\n\n  getFilterOperatorOptions() {\n    let options = _.map(this.operators, function(op) {\n      return { value: op, text: op };\n    });\n\n    return Promise.resolve(options);\n  }\n\n  getFilterValueOptions(segment, $index) {\n    return Promise.resolve([]);\n  }\n\n  createGroupByPartsEntry(groupByValue) {\n    return {\n      params: [groupByValue],\n      def: {\n        type: 'dimension',\n        params: [{\n          optional: false\n        }]\n      }\n    }\n  }\n\n  groupByAction() {\n    this.target.groupBy.push(this.groupBySegment.value);\n\n    this.groupByParts.push(this.createGroupByPartsEntry(this.groupBySegment.value));\n\n    const plusButton = this.uiSegmentSrv.newPlusButton();\n    this.groupBySegment.value = plusButton.value;\n    this.groupBySegment.html = plusButton.html;\n    this.panelCtrl.refresh();\n  }\n\n  createFilter(name, operator, value=null) {\n    const filter = {name, operator: operator || DEFAULT_OPERATOR, value};\n    filter.value = convertFilterValueToProperType(filter)\n    return filter;\n  }\n\n  createFilterSegment(filter) {\n    return {html: filter.name, operator: {html: filter.operator || DEFAULT_OPERATOR}, filterValue: {html: filter.value || 'set filter value'}};\n  }\n\n  filterAction() {\n    const filter = this.target.filter.find(f => f.name === this.filterSegment.name);\n    if (!filter) {\n      const newFilter = this.createFilter(this.filterSegment.value)\n      this.target.filter.push(newFilter);\n\n      this.filterSegments.push(this.createFilterSegment(newFilter));\n    }\n\n    const plusButton = this.uiSegmentSrv.newPlusButton();\n    this.filterSegment.value = plusButton.value;\n    this.filterSegment.html = plusButton.html;\n    this.panelCtrl.refresh();\n  }\n\n  handleGroupByPartEvent(selectParts, part, evt) {\n    switch (evt.name) {\n      case 'action': {\n        this.target.groupBy.splice(part, 1);\n        this.groupByParts.splice(part, 1);\n        this.panelCtrl.refresh();\n        break;\n      }\n      case 'get-part-actions': {\n        return this.$q.when([{ text: 'Remove', value: 'remove-part' }]);\n      }\n    }\n  }\n\n  filterSegmentUpdate(segment, $index) {\n    if (segment.value === REMOVE_FILTER_TEXT) {\n      this.target.filter.splice($index, 1);\n      this.filterSegments.splice($index, 1);\n    } else {\n      this.target.filter[$index].name = segment.value;\n    }\n\n    this.panelCtrl.refresh();\n  }\n\n  filterOperatorSegmentUpdate(segment, $index) {\n    this.target.filter[$index].operator = segment.operator.value;\n    this.panelCtrl.refresh();\n  }\n\n  filterValueSegmentUpdate(segment, $index) {\n    this.target.filter[$index].value = segment.filterValue.value;\n    this.panelCtrl.refresh();\n  }\n}\n\nBitmovinAnalyticsDatasourceQueryCtrl.templateUrl = 'partials/query.editor.html';\n\n"]}