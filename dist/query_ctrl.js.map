{"version":3,"sources":["../src/query_ctrl.js"],"names":["QueryCtrl","_","ATTRIBUTE_LIST","convertFilterValueToProperType","getAsOptionsList","OPERATOR_LIST","OPERATOR","ORDERBY_LIST","ORDERBY","QUERY_INTERVAL","QUERY_INTERVAL_LIST","AGGREGATION_LIST","ResultFormat","REMOVE_ITEM_TEXT","DEFAULT_LICENSE","licenseKey","label","DEFAULT_OPERATOR","EQ","GROUPBY_DEFAULT_ORDER","ASC","BitmovinAnalyticsDatasourceQueryCtrl","$scope","$injector","templateSrv","$q","uiSegmentSrv","scope","metrics","fields","operators","orderByOperators","licenses","resultFormats","TIME_SERIES","TABLE","intervals","filterSegment","newPlusButton","groupBySegment","orderBySegment","groupByParts","target","groupBy","map","createGroupByPartsEntry","e","orderBySegments","orderBy","createOrderBySegment","filterSegments","filter","createFilterSegment","f","metric","percentileValue","dimension","license","resultFormat","interval","HOUR","alias","limit","lastQueryError","datasource","getLicenses","then","response","status","data","result","items","item","name","push","find","l","panelCtrl","events","on","onDataReceived","bind","onDataError","dataList","err","handleQueryCtrlError","config","resultTarget","refId","error","message","refresh","options","Promise","resolve","unshift","value","text","segment","$index","groupByValue","params","def","type","optional","plusButton","html","operator","filterValue","order","newFilter","createFilter","newOrderBy","createOrderBy","selectParts","part","evt","splice","when","templateUrl"],"mappings":"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","file":"query_ctrl.js","sourcesContent":["import {QueryCtrl} from 'app/plugins/sdk';\nimport './css/query-editor.css!'\n\nimport _ from 'lodash';\nimport { ATTRIBUTE_LIST, convertFilterValueToProperType, getAsOptionsList } from './types/queryAttributes';\nimport { OPERATOR_LIST, OPERATOR, ORDERBY_LIST, ORDERBY } from './types/operators';\nimport { QUERY_INTERVAL, QUERY_INTERVAL_LIST } from './types/intervals';\nimport { AGGREGATION_LIST } from './types/aggregations';\nimport { ResultFormat } from './types/resultFormat';\n\nconst REMOVE_ITEM_TEXT = '-- Remove --';\nconst DEFAULT_LICENSE = {licenseKey: '<YOUR LICENSE KEY>', label: '-- Select License --'};\nconst DEFAULT_OPERATOR = OPERATOR.EQ;\nconst GROUPBY_DEFAULT_ORDER = ORDERBY.ASC;\n\nexport class BitmovinAnalyticsDatasourceQueryCtrl extends QueryCtrl {\n\n  constructor($scope, $injector, templateSrv, $q, uiSegmentSrv)  {\n    super($scope, $injector);\n\n    this.scope = $scope;\n    this.$q = $q;\n    this.uiSegmentSrv = uiSegmentSrv;\n\n    this.metrics = AGGREGATION_LIST;\n    this.fields = ATTRIBUTE_LIST;\n    this.operators = OPERATOR_LIST;\n    this.orderByOperators = ORDERBY_LIST;\n    this.licenses = [];\n    this.resultFormats = [ResultFormat.TIME_SERIES, ResultFormat.TABLE];\n    this.intervals = QUERY_INTERVAL_LIST;\n    this.filterSegment = this.uiSegmentSrv.newPlusButton();\n    this.groupBySegment = this.uiSegmentSrv.newPlusButton();\n    this.orderBySegment = this.uiSegmentSrv.newPlusButton();\n    this.groupByParts = this.target.groupBy ? this.target.groupBy.map(e => this.createGroupByPartsEntry(e)) : [];\n    this.orderBySegments = this.target.orderBy ? this.target.orderBy.map(e => this.createOrderBySegment(e)) : [];\n    this.filterSegments = this.target.filter ? this.target.filter.map(f => this.createFilterSegment(f)) : [];\n\n    this.target.metric = this.target.metric || this.metrics[0];\n    this.target.percentileValue = this.target.percentileValue || 95;\n    this.target.dimension = this.target.dimension || this.fields[0];\n    this.target.license = this.target.license || this.licenses[0];\n    this.target.resultFormat = this.target.resultFormat || this.resultFormats[0];\n    this.target.interval = this.target.interval || QUERY_INTERVAL.HOUR;\n    this.target.alias = this.target.alias || '';\n    this.target.groupBy = this.target.groupBy || [];\n    this.target.orderBy = this.target.orderBy || [];\n    this.target.filter = this.target.filter || [];\n    this.target.limit = this.target.limit;\n    this.lastQueryError = [];\n\n    this.datasource.getLicenses().then(response => {\n      if (response.status === 200) {\n        this.licenses = [DEFAULT_LICENSE];\n\n        for (var item of response.data.data.result.items) {\n          item['label'] = item.name ? item.name : item.licenseKey;\n          this.licenses.push(item);\n        }\n\n        if (!this.target.license || !this.licenses.find(l => l.licenseKey === this.target.license)) {\n          this.target.license = DEFAULT_LICENSE.licenseKey;\n        }\n      }\n    });\n\n    this.panelCtrl.events.on('data-received', this.onDataReceived.bind(this), $scope);\n    this.panelCtrl.events.on('data-error', this.onDataError.bind(this), $scope);\n  }\n\n  onDataReceived(dataList) {\n    this.lastQueryError = [];\n  }\n\n  onDataError(err) {\n    this.handleQueryCtrlError(err);\n  }\n\n  handleQueryCtrlError(err) {\n    if (err.config && err.config.data && err.config.resultTarget !== this.target.refId && err.config.resultTarget !== this.target.alias) {\n      return;\n    }\n\n    if (err.error && err.error.data && err.error.data.error) {\n      this.lastQueryError[this.target.refId] = err.error.data.error.message;\n    } else if (err.error && err.error.data) {\n      this.lastQueryError[this.target.refId] = err.error.data.message;\n    } else if (err.data && err.data.error) {\n      this.lastQueryError[this.target.refId] = err.data.error.message;\n    } else if (err.data && err.data.message) {\n      this.lastQueryError[this.target.refId] = err.data.message;\n    } else {\n      this.lastQueryError[this.target.refId] = err;\n    }\n  }\n\n  onChangeInternal() {\n    this.panelCtrl.refresh(); // Asks the panel to refresh data.\n  }\n\n  getGroupByOptions() {\n    let options = getAsOptionsList(this.fields);\n    return Promise.resolve(options);\n  }\n\n  getFilterOptions() {\n    let options = getAsOptionsList(this.fields);\n    return Promise.resolve(options);\n  }\n\n  getFilterSegmentOptions() {\n    var options = getAsOptionsList(this.fields);\n\n    options.unshift({\n      value: REMOVE_ITEM_TEXT,\n      text: REMOVE_ITEM_TEXT\n    })\n\n    return Promise.resolve(options);\n  }\n\n  getFilterOperatorOptions() {\n    let options = getAsOptionsList(this.operators);\n\n    return Promise.resolve(options);\n  }\n\n  getFilterValueOptions(segment, $index) {\n    return Promise.resolve([]);\n  }\n\n  getOrderByDimensionOptions() {\n    var options = getAsOptionsList(this.fields);\n\n    options.unshift({\n      value: REMOVE_ITEM_TEXT,\n      text: REMOVE_ITEM_TEXT\n    })\n\n    return Promise.resolve(options);\n  }\n\n  getOrderByOperatorOptions() {\n    let options = getAsOptionsList(this.orderByOperators);\n    return Promise.resolve(options);\n  }\n\n  createGroupByPartsEntry(groupByValue) {\n    return {\n      params: [groupByValue],\n      def: {\n        type: 'dimension',\n        params: [{\n          optional: false\n        }]\n      }\n    }\n  }\n\n  groupByAction() {\n    this.target.groupBy.push(this.groupBySegment.value);\n\n    this.groupByParts.push(this.createGroupByPartsEntry(this.groupBySegment.value));\n\n    const plusButton = this.uiSegmentSrv.newPlusButton();\n    this.groupBySegment.value = plusButton.value;\n    this.groupBySegment.html = plusButton.html;\n    this.panelCtrl.refresh();\n  }\n\n  createFilter(name, operator, value=null) {\n    const filter = {name, operator: operator || DEFAULT_OPERATOR, value};\n    filter.value = convertFilterValueToProperType(filter)\n    return filter;\n  }\n\n  createFilterSegment(filter) {\n    return {html: filter.name, operator: {html: filter.operator || DEFAULT_OPERATOR}, filterValue: {html: filter.value || 'set filter value'}};\n  }\n\n  createOrderBy(name, order) {\n    return {name, order: order || GROUPBY_DEFAULT_ORDER};\n  }\n\n  createOrderBySegment(orderBy) {\n    return {html: orderBy.name, order: {html: orderBy.order || GROUPBY_DEFAULT_ORDER}};\n  }\n\n  filterAction() {\n    const filter = this.target.filter.find(f => f.name === this.filterSegment.name);\n    if (!filter) {\n      const newFilter = this.createFilter(this.filterSegment.value)\n      this.target.filter.push(newFilter);\n\n      this.filterSegments.push(this.createFilterSegment(newFilter));\n    }\n\n    const plusButton = this.uiSegmentSrv.newPlusButton();\n    this.filterSegment.value = plusButton.value;\n    this.filterSegment.html = plusButton.html;\n    this.panelCtrl.refresh();\n  }\n\n  orderByAction() {\n    const orderBy = this.target.orderBy.find(e => e.name === this.orderBySegment.name);\n    if (!orderBy) {\n      const newOrderBy = this.createOrderBy(this.orderBySegment.value)\n      this.target.orderBy.push(newOrderBy);\n\n      this.orderBySegments.push(this.createOrderBySegment(newOrderBy));\n    }\n\n    const plusButton = this.uiSegmentSrv.newPlusButton();\n    this.orderBySegment.value = plusButton.value;\n    this.orderBySegment.html = plusButton.html;\n    this.panelCtrl.refresh();\n  }\n\n  handleGroupByPartEvent(selectParts, part, evt) {\n    switch (evt.name) {\n      case 'action': {\n        this.target.groupBy.splice(part, 1);\n        this.groupByParts.splice(part, 1);\n        this.panelCtrl.refresh();\n        break;\n      }\n      case 'get-part-actions': {\n        return this.$q.when([{ text: 'Remove', value: 'remove-part' }]);\n      }\n    }\n  }\n\n  filterSegmentUpdate(segment, $index) {\n    if (segment.value === REMOVE_ITEM_TEXT) {\n      this.target.filter.splice($index, 1);\n      this.filterSegments.splice($index, 1);\n    } else {\n      this.target.filter[$index].name = segment.value;\n    }\n\n    this.panelCtrl.refresh();\n  }\n\n  filterOperatorSegmentUpdate(segment, $index) {\n    this.target.filter[$index].operator = segment.operator.value;\n    this.panelCtrl.refresh();\n  }\n\n  filterValueSegmentUpdate(segment, $index) {\n    this.target.filter[$index].value = segment.filterValue.value;\n    this.panelCtrl.refresh();\n  }\n\n  orderByDimensionSegmentUpdate(segment, $index) {\n    if (segment.value === REMOVE_ITEM_TEXT) {\n      this.target.orderBy.splice($index, 1);\n      this.orderBySegments.splice($index, 1);\n    } else {\n      this.target.orderBy[$index].name = segment.value;\n    }\n\n    this.panelCtrl.refresh();\n  }\n\n  orderByOrderSegmentUpdate(segment, $index) {\n    this.target.orderBy[$index].order = segment.order.value;\n    this.panelCtrl.refresh();\n  }\n}\n\nBitmovinAnalyticsDatasourceQueryCtrl.templateUrl = 'partials/query.editor.html';\n\n"]}