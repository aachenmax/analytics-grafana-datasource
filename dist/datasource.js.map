{"version":3,"sources":["../src/datasource.js"],"names":["_","convertFilterValueToProperType","ATTRIBUTE","METRICS_ATTRIBUTE_LIST","AGGREGATION","calculateAutoInterval","QUERY_INTERVAL","transform","ResultFormat","getApiRequestUrl","baseUrl","isAdAnalytics","isMetric","BitmovinAnalyticsDatasource","instanceSettings","$q","backendSrv","templateSrv","type","url","jsonData","name","q","withCredentials","headers","apiKey","tenantOrgId","length","basicAuth","options","query","buildQueryParameters","targets","filter","t","hide","when","data","getAdhocFilters","adhocFilters","targetResponsePromises","map","target","resultFormat","TIME_SERIES","interval","HOUR","filters","operator","value","orderBy","e","order","licenseKey","license","start","range","from","toISOString","end","to","includes","dimension","urlAppendix","metric","COUNT","LICENSE_KEY","percentileValue","AUTO","intervalMs","groupBy","Number","limit","undefined","apiRequestUrl","doRequest","method","resultTarget","alias","refId","Promise","all","then","targetResponses","result","response","series","getLicenses","status","message","title","datasourceRequest"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport { convertFilterValueToProperType, ATTRIBUTE, METRICS_ATTRIBUTE_LIST } from './types/queryAttributes';\nimport { AGGREGATION } from './types/aggregations';\nimport { calculateAutoInterval, QUERY_INTERVAL } from './types/intervals';\nimport { transform } from './result_transformer';\nimport { ResultFormat } from './types/resultFormat';\n\nconst getApiRequestUrl = (baseUrl, isAdAnalytics, isMetric) => {\n  if (isAdAnalytics === true) {\n    return baseUrl + '/analytics/ads/queries';\n  }\n  if (isMetric == true) {\n    return baseUrl + '/analytics/metrics';\n  }\n  return baseUrl + '/analytics/queries';\n};\n\nexport class BitmovinAnalyticsDatasource {\n\n  constructor(instanceSettings, $q, backendSrv, templateSrv) {\n    this.type = instanceSettings.type;\n    this.url = instanceSettings.url;\n    this.isAdAnalytics = instanceSettings.jsonData.isAdAnalytics;\n    this.name = instanceSettings.name;\n    this.q = $q;\n    this.backendSrv = backendSrv;\n    this.templateSrv = templateSrv;\n    this.withCredentials = instanceSettings.withCredentials;\n\n    this.headers = {\n      'Content-Type': 'application/json',\n      'X-Api-Key': instanceSettings.jsonData.apiKey,\n    };\n\n    const tenantOrgId = instanceSettings.jsonData.tenantOrgId;\n    if (typeof tenantOrgId === 'string' && tenantOrgId.length > 0) {\n      this.headers['X-Tenant-Org-Id'] = tenantOrgId;\n    }\n\n    if (typeof instanceSettings.basicAuth === 'string' && instanceSettings.basicAuth.length > 0) {\n      this.headers['Authorization'] = instanceSettings.basicAuth;\n    }\n  }\n\n  query(options) {\n    const query = this.buildQueryParameters(options);\n    query.targets = query.targets.filter(t => !t.hide);\n\n    if (query.targets.length <= 0) {\n      return this.q.when({ data: [] });\n    }\n\n    if (this.templateSrv.getAdhocFilters) {\n      query.adhocFilters = this.templateSrv.getAdhocFilters(this.name);\n    } else {\n      query.adhocFilters = [];\n    }\n\n    const targetResponsePromises = _.map(query.targets, target => {\n      target.resultFormat = target.resultFormat || ResultFormat.TIME_SERIES;\n      target.interval = target.interval || QUERY_INTERVAL.HOUR;\n\n      const filters = _.map(target.filter, filter => {\n        return {\n          name: filter.name,\n          operator: filter.operator,\n          value: convertFilterValueToProperType(filter)\n        }\n      });\n      const orderBy = _.map(target.orderBy, e => ({ name: e.name, order: e.order }));\n      const data = {\n        licenseKey: target.license,\n        start: options.range.from.toISOString(),\n        end: options.range.to.toISOString(),\n        filters,\n        orderBy\n      };\n\n      let isMetric = METRICS_ATTRIBUTE_LIST.includes(target.dimension);\n      let urlAppendix = '';\n      \n      if (isMetric) {\n        urlAppendix = target.dimension;\n        data['metric'] = target.dimension\n      } else {\n        target.metric = target.metric || AGGREGATION.COUNT;\n        target.dimension = target.dimension || ATTRIBUTE.LICENSE_KEY;\n        urlAppendix = target.metric\n        data['dimension'] = target.dimension;\n    \n          if (target.metric === 'percentile') {\n            data['percentile'] = target.percentileValue;\n          }\n      }\n\n      if (target.resultFormat === ResultFormat.TIME_SERIES) {\n        data['interval'] = target.interval === QUERY_INTERVAL.AUTO ? calculateAutoInterval(options.intervalMs) : target.interval;\n      }\n      data['groupBy'] = target.groupBy;\n      data['limit'] = Number(target.limit) || undefined;\n      var apiRequestUrl = getApiRequestUrl(this.url, this.isAdAnalytics, isMetric);\n\n      return this.doRequest({\n        url: apiRequestUrl + '/' + urlAppendix,\n        data: data,\n        method: 'POST',\n        resultTarget: target.alias || target.refId,\n        resultFormat: target.resultFormat\n      });\n    });\n\n    return Promise.all(targetResponsePromises).then(targetResponses => {\n      let result = [];\n      _.map(targetResponses, response => {\n        const series = transform(response, options);\n        result = [...result, ...series];\n      });\n      return {\n        data: result\n      };\n    });\n  }\n\n  testDatasource() {\n    return this.getLicenses().then(response => {\n      if (response.status === 200) {\n        return { status: \"success\", message: \"Data source is working\", title: \"Success\" };\n      }\n    });\n  }\n\n  annotationQuery(options) {\n\n  }\n\n  metricFindQuery(query) {\n\n  }\n\n  doRequest(options) {\n    options.withCredentials = this.withCredentials;\n    options.headers = this.headers;\n\n    return this.backendSrv.datasourceRequest(options);\n  }\n\n  buildQueryParameters(options) {\n    return options;\n  }\n\n  getLicenses() {\n    return this.doRequest({\n      url: this.url + '/analytics/licenses',\n      method: 'GET',\n    });\n  }\n}\n"],"file":"datasource.js"}